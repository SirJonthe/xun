
/// @brief Performs a scan of all ports to populate a hardware ID table.
d_hwscan( void );

/// @brief Scans hardware ID table for the given ID and returns the index in the table corresponding to the port index of the connected device.
/// @param id The ID to scan for.
/// @return The port index of the device with the given ID.
/// @note Requires that d_hwscan has been run before call.
/// @sa d_hwscan
d_find_hw(id);

/// @brief Initialized the on-board TTY console.
/// @return 1 if the TTY was found, 0 otherwise.
d_init_tty( void );

/// @brief Prints text on the TTY.
/// @param msg The message.
/// @param len The length of the message (stops earlier if zero terminator encountered).
/// @return 1 if the print was successful, 0 otherwise.
d_tty(msg, len);

/// @brief Scans hardware ID table for the given ID and returns the index in the table corresponding to the port index of the connected device. If the device is not found, execution locks.
/// @param id The ID to scan for.
/// @return The port index of the device with the given ID.
/// @note Completely locks execution if the ID is not found, requiring a physical reboot.
d_require_hw(id);

/// @brief Prints text on the monitor. If monitor not available, print text to TTY.
/// @param msg The message.
/// @param len The length of the message (stops earlier if zero terminator encountered).
/// @return 1 if the print was successful on one of the devices, 0 otherwise.
d_print(msg, len);

/// @brief Initializes a connected monitor.
/// @param mode Sets the monitor to a specified mode.
/// @note A monitor is required to be connected, so execution will lock if there is no monitor connected.
d_init_monitor(mode);

/// @brief Prints some handy information about the computer.
i_print_sys_info( void );

/// @brief Initializes a connected keyboard.
/// @note A keyboard is required to be connected, so execution will lock if there is no keyboard connected.
d_init_keyboard( void );

/// @brief Initializes a connected disk reader.
/// @note A disk reader is required to be connected, so execution will lock if there is no disk reader connected.
d_init_diskreader( void );

/// @brief Checks if there is a connected disk in the disk reader and loads it into memory and tries to execute it as a program.
s_load_bootdisk( void );
