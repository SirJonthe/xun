#include <stdlib>

auto __rand_x     = 0; // Random state variable.
auto __rand_y     = 0; // Random state variable.
auto __rand_z     = 0; // Random state variable.
auto __rand_state = 1; // Random state variable.

rand( void )
{
	auto t = __rand_x ^ (__rand_x << 4);
	__rand_x = __rand_y;
	__rand_y = __rand_z;
	__rand_z = __rand_state;
	__rand_state = __rand_z ^ t ^ (__rand_z >> 1) ^ (t << 1);
	return __rand_state;
}

srand(seed)
{
	__rand_state = seed;
}

malloc(n)
{
	if (n <= 0) {
		return NULL;
	}
	// TODO: More here...
}

calloc(n)
{
	auto mem = malloc(n);
	auto i = 0;
	while (i < n) {
		mem[i] = 0;
		++i;
	}
	return mem;
}

free(mem)
{
	// TODO IMPL
}

abs(a)
{
	if (a < 0) {
		return -a;
	}
	return a;
}
